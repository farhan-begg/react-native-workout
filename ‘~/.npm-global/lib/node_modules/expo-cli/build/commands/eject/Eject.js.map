{"version":3,"sources":["../../../src/commands/eject/Eject.ts"],"names":["ejectAsync","projectRoot","options","platforms","process","platform","push","exp","pkg","ensureConfigAsync","tempDir","temporary","directory","includes","log","warn","chalk","bold","newLine","hasNewProjectFiles","needsPodInstall","createNativeProjectsFromTemplateAsync","isSyncing","shouldInstall","install","packageManager","CreateApp","resolvePackageManager","npm","yarn","installNodeDependenciesAsync","clean","configureIOSStepAsync","configureAndroidStepAsync","podsInstalled","installCocoaPodsAsync","debug","warnIfDependenciesRequireAdditionalSetupAsync","nested","WarningAggregator","hasWarningsIOS","hasWarningsAndroid","installCmd","hasOwnProperty","dim","fallback","text","applyingIOSConfigStep","logNewSection","stopAndPersist","symbol","red","succeed","cleanJsDepsStep","fs","remove","installJsDepsStep","message","fail","SilentError","applyingAndroidConfigStep","copyPathsFromTemplate","templatePath","paths","copiedPaths","skippedPaths","targetPath","projectPath","path","join","existsSync","copySync","config","dynamicConfigPath","staticConfigPath","JsonFile","writeAsync","expo","json5","error","addNewLineIfNone","CommandError","entryPoint","createFileHash","contents","crypto","createHash","update","digest","writeMetroConfig","updatingMetroConfigStep","sourceConfigPath","targetConfigPath","targetConfigPathExists","readFileSync","targetContents","Error","stop","clear","metro","e","validateBareTemplateExistsAsync","sdkVersion","sdkMajorVersionNumber","semver","major","templateSpec","pacote","manifest","code","updatePackageJSONAsync","defaultDependencies","defaultDevDependencies","dependencies","devDependencies","read","createDependenciesMap","updatingPackageJsonStep","scripts","start","ios","android","combinedDependencies","requiredDependencies","dependenciesKey","combinedDevDependencies","hasNewDependencies","hashForDependencyMap","hasNewDevDependencies","removedPkgMain","shouldDeleteMainField","main","writeFile","resolve","JSON","stringify","resolveBareEntryFile","isPkgMainExpoAppEntry","resolvedMainField","extensions","startsWith","normalizeDependencyMap","deps","Object","keys","map","dependency","sort","depsList","depsString","getTargetPaths","targetPaths","bareEntryFile","cloneNativeDirectoriesAsync","creatingNativeProjectStep","Exp","extractTemplateAppAsync","results","GitIgnore","mergeGitIgnorePaths","length","didMerge","didClear","yellow","depsResults","outputMap","key","value","expoPackagesWithExtraSetup","reduce","prev","curr","pkgsWithExtraSetup","packagesToWarn","filter","pkgName","warnAdditionalSetupStep","plural","forEach","stripDashes","s","replace","input"],"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","sourcesContent":["import { ExpoConfig, getConfig, PackageJSONConfig } from '@expo/config';\nimport { WarningAggregator } from '@expo/config-plugins';\nimport { getBareExtensions, getFileWithExtensions } from '@expo/config/paths';\nimport JsonFile, { JSONObject } from '@expo/json-file';\nimport { Exp } from '@expo/xdl';\nimport chalk from 'chalk';\nimport crypto from 'crypto';\nimport fs from 'fs-extra';\nimport npmPackageArg from 'npm-package-arg';\nimport pacote from 'pacote';\nimport path from 'path';\nimport semver from 'semver';\nimport temporary from 'tempy';\nimport terminalLink from 'terminal-link';\n\nimport CommandError, { SilentError } from '../../CommandError';\nimport log from '../../log';\nimport configureAndroidProjectAsync from '../apply/configureAndroidProjectAsync';\nimport configureIOSProjectAsync from '../apply/configureIOSProjectAsync';\nimport * as CreateApp from '../utils/CreateApp';\nimport * as GitIgnore from '../utils/GitIgnore';\nimport { usesOldExpoUpdatesAsync } from '../utils/ProjectUtils';\nimport { learnMore } from '../utils/TerminalLink';\nimport { logConfigWarningsAndroid, logConfigWarningsIOS } from '../utils/logConfigWarnings';\nimport maybeBailOnGitStatusAsync from '../utils/maybeBailOnGitStatusAsync';\nimport { getOrPromptForBundleIdentifier, getOrPromptForPackage } from './ConfigValidation';\n\ntype DependenciesMap = { [key: string]: string | number };\ntype PlatformsArray = ('ios' | 'android')[];\n\nexport type EjectAsyncOptions = {\n  verbose?: boolean;\n  force?: boolean;\n  install?: boolean;\n  packageManager?: 'npm' | 'yarn';\n};\n\n/**\n * Entry point into the eject process, delegates to other helpers to perform various steps.\n *\n * 1. Verify git is clean\n * 2. Create native projects (ios, android)\n * 3. Install node modules\n * 4. Apply config to native projects\n * 5. Install CocoaPods\n * 6. Log project info\n */\nexport async function ejectAsync(\n  projectRoot: string,\n  options: EjectAsyncOptions = {}\n): Promise<void> {\n  if (await maybeBailOnGitStatusAsync()) return;\n\n  const platforms: PlatformsArray = ['android'];\n\n  // Skip ejecting for iOS on Windows\n  if (process.platform !== 'win32') {\n    platforms.push('ios');\n  }\n\n  const { exp, pkg } = await ensureConfigAsync(projectRoot);\n  const tempDir = temporary.directory();\n\n  if (!platforms.includes('ios')) {\n    log.warn(\n      `⚠️  Skipping generating the iOS native project files. Run ${chalk.bold(\n        'expo eject'\n      )} again from macOS or Linux to generate the iOS project.`\n    );\n    log.newLine();\n  }\n\n  const { hasNewProjectFiles, needsPodInstall } = await createNativeProjectsFromTemplateAsync({\n    projectRoot,\n    exp,\n    pkg,\n    tempDir,\n    platforms,\n  });\n  // Set this to true when we can detect that the user is running eject to sync new changes rather than ejecting to bare.\n  // This will be used to prevent the node modules from being nuked every time.\n  const isSyncing = !hasNewProjectFiles;\n\n  // Install node modules\n  const shouldInstall = options?.install !== false;\n\n  const packageManager = CreateApp.resolvePackageManager({\n    install: shouldInstall,\n    npm: options?.packageManager === 'npm',\n    yarn: options?.packageManager === 'yarn',\n  });\n\n  if (shouldInstall) {\n    await installNodeDependenciesAsync(projectRoot, packageManager, { clean: !isSyncing });\n  }\n\n  // Apply Expo config to native projects\n  if (platforms.includes('ios')) {\n    await configureIOSStepAsync(projectRoot);\n  }\n\n  if (platforms.includes('android')) {\n    await configureAndroidStepAsync(projectRoot);\n  }\n\n  // Install CocoaPods\n  let podsInstalled: boolean = false;\n  // err towards running pod install less because it's slow and users can easily run npx pod-install afterwards.\n  if (platforms.includes('ios') && shouldInstall && needsPodInstall) {\n    podsInstalled = await CreateApp.installCocoaPodsAsync(projectRoot);\n  } else {\n    log.debug('Skipped pod install');\n  }\n\n  await warnIfDependenciesRequireAdditionalSetupAsync(pkg, options);\n\n  log.newLine();\n  log.nested(`➡️  ${chalk.bold('Next steps')}`);\n\n  if (WarningAggregator.hasWarningsIOS() || WarningAggregator.hasWarningsAndroid()) {\n    log.nested(\n      `- 👆 Review the logs above and look for any warnings (⚠️ ) that might need follow-up.`\n    );\n  }\n\n  // Log a warning about needing to install node modules\n  if (options?.install === false) {\n    const installCmd = packageManager === 'npm' ? 'npm install' : 'yarn';\n    log.nested(`- ⚠️  Install node modules: ${log.chalk.bold(installCmd)}`);\n  }\n  if (!podsInstalled) {\n    log.nested(\n      `- 🍫 When CocoaPods is installed, initialize the project workspace: ${chalk.bold(\n        'npx pod-install'\n      )}`\n    );\n  }\n  log.nested(\n    `- 💡 You may want to run ${chalk.bold(\n      'npx @react-native-community/cli doctor'\n    )} to help install any tools that your app may need to run your native projects.`\n  );\n  log.nested(\n    `- 🔑 Download your Android keystore (if you're not sure if you need to, just run the command and see): ${chalk.bold(\n      'expo fetch:android:keystore'\n    )}`\n  );\n\n  if (exp.hasOwnProperty('assetBundlePatterns')) {\n    log.nested(\n      `- 📁 The property ${chalk.bold(\n        `assetBundlePatterns`\n      )} does not have the same effect in the bare workflow. ${log.chalk.dim(\n        learnMore('https://docs.expo.io/bare/updating-your-app/#embedding-assets')\n      )}`\n    );\n  }\n\n  if (await usesOldExpoUpdatesAsync(projectRoot)) {\n    log.nested(\n      `- 🚀 ${\n        (terminalLink(\n          'expo-updates',\n          'https://github.com/expo/expo/blob/master/packages/expo-updates/README.md'\n        ),\n        {\n          fallback: (text: string) => text,\n        })\n      } has been configured in your project. Before you do a release build, make sure you run ${chalk.bold(\n        'expo publish'\n      )}. ${log.chalk.dim(learnMore('https://expo.fyi/release-builds-with-expo-updates'))}`\n    );\n  }\n\n  if (hasNewProjectFiles) {\n    log.newLine();\n    log.nested(`☑️  ${chalk.bold('When you are ready to run your project')}`);\n    log.nested(\n      'To compile and run your project in development, execute one of the following commands:'\n    );\n\n    if (platforms.includes('ios')) {\n      log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run ios' : 'yarn ios')}`);\n    }\n\n    if (platforms.includes('android')) {\n      log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run android' : 'yarn android')}`);\n    }\n\n    log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run web' : 'yarn web')}`);\n  }\n}\n\nasync function configureIOSStepAsync(projectRoot: string) {\n  const applyingIOSConfigStep = CreateApp.logNewSection('iOS config syncing');\n  await configureIOSProjectAsync(projectRoot);\n  if (WarningAggregator.hasWarningsIOS()) {\n    applyingIOSConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('iOS config synced with warnings that should be fixed:'),\n    });\n    logConfigWarningsIOS();\n  } else {\n    applyingIOSConfigStep.succeed('iOS config synced');\n  }\n}\n\n/**\n * Wraps PackageManager to install node modules and adds CLI logs.\n *\n * @param projectRoot\n */\nasync function installNodeDependenciesAsync(\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm',\n  { clean = true }: { clean: boolean }\n) {\n  if (clean) {\n    // This step can take a couple seconds, if the installation logs are enabled (with EXPO_DEBUG) then it\n    // ends up looking odd to see \"Installing JavaScript dependencies\" for ~5 seconds before the logs start showing up.\n    const cleanJsDepsStep = CreateApp.logNewSection('Cleaning JavaScript dependencies.');\n    // nuke the node modules\n    // TODO: this is substantially slower, we should find a better alternative to ensuring the modules are installed.\n    await fs.remove('node_modules');\n    cleanJsDepsStep.succeed('Cleaned JavaScript dependencies.');\n  }\n\n  const installJsDepsStep = CreateApp.logNewSection('Installing JavaScript dependencies.');\n\n  try {\n    await CreateApp.installNodeDependenciesAsync(projectRoot, packageManager);\n    installJsDepsStep.succeed('Installed JavaScript dependencies.');\n  } catch {\n    const message = `Something went wrong installing JavaScript dependencies, check your ${packageManager} logfile or run ${chalk.bold(\n      `${packageManager} install`\n    )} again manually.`;\n    installJsDepsStep.fail(chalk.red(message));\n    // TODO: actually show the error message from the package manager! :O\n    throw new SilentError(message);\n  }\n}\n\nasync function configureAndroidStepAsync(projectRoot: string) {\n  const applyingAndroidConfigStep = CreateApp.logNewSection('Android config syncing');\n  await configureAndroidProjectAsync(projectRoot);\n  if (WarningAggregator.hasWarningsAndroid()) {\n    applyingAndroidConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('Android config synced with warnings that should be fixed:'),\n    });\n    logConfigWarningsAndroid();\n  } else {\n    applyingAndroidConfigStep.succeed('Android config synced');\n  }\n}\n\nfunction copyPathsFromTemplate(\n  projectRoot: string,\n  templatePath: string,\n  paths: string[]\n): [string[], string[]] {\n  const copiedPaths = [];\n  const skippedPaths = [];\n  for (const targetPath of paths) {\n    const projectPath = path.join(projectRoot, targetPath);\n    if (!fs.existsSync(projectPath)) {\n      copiedPaths.push(targetPath);\n      fs.copySync(path.join(templatePath, targetPath), projectPath);\n    } else {\n      skippedPaths.push(targetPath);\n    }\n  }\n  return [copiedPaths, skippedPaths];\n}\n\nasync function ensureConfigAsync(\n  projectRoot: string\n): Promise<{ exp: ExpoConfig; pkg: PackageJSONConfig }> {\n  // We need the SDK version to proceed\n\n  let exp: ExpoConfig;\n  let pkg: PackageJSONConfig;\n  try {\n    const config = getConfig(projectRoot);\n    exp = config.exp;\n    pkg = config.pkg;\n\n    // If no config exists in the file system then we should generate one so the process doesn't fail.\n    if (!config.dynamicConfigPath && !config.staticConfigPath) {\n      // Don't check for a custom config path because the process should fail if a custom file doesn't exist.\n      // Write the generated config.\n      // writeConfigJsonAsync(projectRoot, config.exp);\n      await JsonFile.writeAsync(\n        // TODO: Write to app.config.json because it's easier to convert to a js config file.\n        path.join(projectRoot, 'app.json'),\n        { expo: (config.exp as unknown) as JSONObject },\n        { json5: false }\n      );\n    }\n  } catch (error) {\n    // TODO(Bacon): Currently this is already handled in the command\n    log.addNewLineIfNone();\n    throw new CommandError(`${error.message}\\n`);\n  }\n\n  // Prompt for the Android package first because it's more strict than the bundle identifier\n  // this means you'll have a better chance at matching the bundle identifier with the package name.\n  await getOrPromptForPackage(projectRoot);\n  await getOrPromptForBundleIdentifier(projectRoot);\n\n  if (exp.entryPoint) {\n    delete exp.entryPoint;\n    log(`- expo.entryPoint is not needed and has been removed.`);\n  }\n\n  return { exp, pkg };\n}\n\nfunction createFileHash(contents: string): string {\n  // this doesn't need to be secure, the shorter the better.\n  return crypto.createHash('sha1').update(contents).digest('hex');\n}\n\nfunction writeMetroConfig({\n  projectRoot,\n  pkg,\n  tempDir,\n}: {\n  projectRoot: string;\n  pkg: PackageJSONConfig;\n  tempDir: string;\n}) {\n  /**\n   * Add metro config, or warn if metro config already exists. The developer will need to add the\n   * hashAssetFiles plugin manually.\n   */\n\n  const updatingMetroConfigStep = CreateApp.logNewSection('Adding Metro bundler configuration');\n\n  try {\n    const sourceConfigPath = path.join(tempDir, 'metro.config.js');\n    const targetConfigPath = path.join(projectRoot, 'metro.config.js');\n    const targetConfigPathExists = fs.existsSync(targetConfigPath);\n    if (targetConfigPathExists) {\n      // Prevent re-runs from throwing an error if the metro config hasn't been modified.\n      const contents = createFileHash(fs.readFileSync(targetConfigPath, 'utf8'));\n      const targetContents = createFileHash(fs.readFileSync(sourceConfigPath, 'utf8'));\n      if (contents !== targetContents) {\n        throw new Error('Existing Metro configuration found; not overwriting.');\n      } else {\n        // Nothing to change, hide the step and exit.\n        updatingMetroConfigStep.stop();\n        updatingMetroConfigStep.clear();\n        return;\n      }\n    } else if (\n      fs.existsSync(path.join(projectRoot, 'metro.config.json')) ||\n      pkg.metro ||\n      fs.existsSync(path.join(projectRoot, 'rn-cli.config.js'))\n    ) {\n      throw new Error('Existing Metro configuration found; not overwriting.');\n    }\n\n    fs.copySync(sourceConfigPath, targetConfigPath);\n    updatingMetroConfigStep.succeed('Added Metro bundler configuration.');\n  } catch (e) {\n    updatingMetroConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('Metro bundler configuration not applied:'),\n    });\n    log.nested(`- ${e.message}`);\n    log.nested(\n      `- You will need to add the ${chalk.bold(\n        'hashAssetFiles'\n      )} plugin to your Metro configuration. ${log.chalk.dim(\n        learnMore('https://docs.expo.io/bare/installing-updates/')\n      )}`\n    );\n    log.newLine();\n  }\n}\n\nasync function validateBareTemplateExistsAsync(sdkVersion: string): Promise<npmPackageArg.Result> {\n  // Validate that the template exists\n  const sdkMajorVersionNumber = semver.major(sdkVersion);\n  const templateSpec = npmPackageArg(`expo-template-bare-minimum@sdk-${sdkMajorVersionNumber}`);\n  try {\n    await pacote.manifest(templateSpec);\n  } catch (e) {\n    if (e.code === 'E404') {\n      throw new Error(\n        `Unable to eject because an eject template for SDK ${sdkMajorVersionNumber} was not found.`\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  return templateSpec;\n}\n\ntype DependenciesModificationResults = {\n  hasNewDependencies: boolean;\n  hasNewDevDependencies: boolean;\n};\n\nasync function updatePackageJSONAsync({\n  projectRoot,\n  tempDir,\n  pkg,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  pkg: PackageJSONConfig;\n}): Promise<DependenciesModificationResults> {\n  let defaultDependencies: any = {};\n  let defaultDevDependencies: any = {};\n  const { dependencies, devDependencies } = JsonFile.read(path.join(tempDir, 'package.json'));\n  defaultDependencies = createDependenciesMap(dependencies);\n  defaultDevDependencies = createDependenciesMap(devDependencies);\n  /**\n   * Update package.json scripts - `npm start` should default to `react-native\n   * start` rather than `expo start` after ejecting, for example.\n   */\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const updatingPackageJsonStep = CreateApp.logNewSection(\n    'Updating your package.json scripts, dependencies, and main file'\n  );\n  if (!pkg.scripts) {\n    pkg.scripts = {};\n  }\n  pkg.scripts.start = 'react-native start';\n  pkg.scripts.ios = 'react-native run-ios';\n  pkg.scripts.android = 'react-native run-android';\n\n  /**\n   * Update package.json dependencies by combining the dependencies in the project we are ejecting\n   * with the dependencies in the template project. Does the same for devDependencies.\n   *\n   * - The template may have some dependencies beyond react/react-native/react-native-unimodules,\n   *   for example RNGH and Reanimated. We should prefer the version that is already being used\n   *   in the project for those, but swap the react/react-native/react-native-unimodules versions\n   *   with the ones in the template.\n   * - The same applies to expo-updates -- since some native project configuration may depend on the\n   *   version, we should always use the version of expo-updates in the template.\n   */\n\n  const combinedDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDependencies,\n    ...pkg.dependencies,\n  });\n\n  const requiredDependencies = ['react', 'react-native-unimodules', 'react-native', 'expo-updates'];\n\n  for (const dependenciesKey of requiredDependencies) {\n    combinedDependencies[dependenciesKey] = defaultDependencies[dependenciesKey];\n  }\n  const combinedDevDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDevDependencies,\n    ...pkg.devDependencies,\n  });\n\n  // Only change the dependencies if the normalized hash changes, this helps to reduce meaningless changes.\n  const hasNewDependencies =\n    hashForDependencyMap(pkg.dependencies) !== hashForDependencyMap(combinedDependencies);\n  const hasNewDevDependencies =\n    hashForDependencyMap(pkg.devDependencies) !== hashForDependencyMap(combinedDevDependencies);\n  // Save the dependencies\n  if (hasNewDependencies) {\n    pkg.dependencies = combinedDependencies;\n  }\n  if (hasNewDevDependencies) {\n    pkg.devDependencies = combinedDevDependencies;\n  }\n\n  /**\n   * Add new app entry points\n   */\n  let removedPkgMain;\n  // Check that the pkg.main doesn't match:\n  // - ./node_modules/expo/AppEntry\n  // - ./node_modules/expo/AppEntry.js\n  // - node_modules/expo/AppEntry.js\n  // - expo/AppEntry.js\n  // - expo/AppEntry\n  if (shouldDeleteMainField(pkg.main)) {\n    // Save the custom\n    removedPkgMain = pkg.main;\n    delete pkg.main;\n  }\n  await fs.writeFile(path.resolve(projectRoot, 'package.json'), JSON.stringify(pkg, null, 2));\n\n  updatingPackageJsonStep.succeed(\n    'Updated package.json and added index.js entry point for iOS and Android.'\n  );\n  if (removedPkgMain) {\n    log(\n      `- Removed ${chalk.bold(\n        `\"main\": \"${removedPkgMain}\"`\n      )} from package.json because we recommend using index.js as main instead.`\n    );\n    log.newLine();\n  }\n\n  return {\n    hasNewDependencies,\n    hasNewDevDependencies,\n  };\n}\n\nexport function resolveBareEntryFile(projectRoot: string, main: any) {\n  // expo app entry is not needed for bare projects.\n  if (isPkgMainExpoAppEntry(main)) return null;\n  // Look at the `package.json`s `main` field for the main file.\n  const resolvedMainField = main ?? './index';\n  // Get a list of possible extensions for the main file.\n  const extensions = getBareExtensions(['ios', 'android']);\n  // Testing the main field against all of the provided extensions - for legacy reasons we can't use node module resolution as the package.json allows you to pass in a file without a relative path and expect it as a relative path.\n  return getFileWithExtensions(projectRoot, resolvedMainField, extensions);\n}\n\nexport function shouldDeleteMainField(main?: any): boolean {\n  if (!main || !isPkgMainExpoAppEntry(main)) {\n    return false;\n  }\n\n  return !main?.startsWith('index.');\n}\n\nfunction normalizeDependencyMap(deps: DependenciesMap): string[] {\n  return Object.keys(deps)\n    .map(dependency => `${dependency}@${deps[dependency]}`)\n    .sort();\n}\n\nexport function hashForDependencyMap(deps: DependenciesMap): string {\n  const depsList = normalizeDependencyMap(deps);\n  const depsString = depsList.join('\\n');\n  return createFileHash(depsString);\n}\n\nexport function getTargetPaths(\n  projectRoot: string,\n  pkg: PackageJSONConfig,\n  platforms: PlatformsArray\n) {\n  const targetPaths: string[] = [...platforms];\n\n  const bareEntryFile = resolveBareEntryFile(projectRoot, pkg.main);\n  // Only create index.js if we cannot resolve the existing entry point (after replacing the expo entry).\n  if (!bareEntryFile) {\n    targetPaths.push('index.js');\n  }\n\n  return targetPaths;\n}\n\n/**\n * Extract the template and copy the ios and android directories over to the project directory.\n *\n * @param force should create native projects even if they already exist.\n * @return `true` if any project files were created.\n */\nasync function cloneNativeDirectoriesAsync({\n  projectRoot,\n  tempDir,\n  exp,\n  pkg,\n  platforms,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  exp: Pick<ExpoConfig, 'name' | 'sdkVersion'>;\n  pkg: PackageJSONConfig;\n  platforms: PlatformsArray;\n}): Promise<string[]> {\n  const templateSpec = await validateBareTemplateExistsAsync(exp.sdkVersion!);\n\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const creatingNativeProjectStep = CreateApp.logNewSection(\n    'Creating native project directories (./ios and ./android) and updating .gitignore'\n  );\n\n  const targetPaths = getTargetPaths(projectRoot, pkg, platforms);\n\n  let copiedPaths: string[] = [];\n  let skippedPaths: string[] = [];\n  try {\n    await Exp.extractTemplateAppAsync(templateSpec, tempDir, exp);\n    [copiedPaths, skippedPaths] = copyPathsFromTemplate(projectRoot, tempDir, targetPaths);\n    const results = GitIgnore.mergeGitIgnorePaths(\n      path.join(projectRoot, '.gitignore'),\n      path.join(tempDir, '.gitignore')\n    );\n\n    let message = `Created native project${platforms.length > 1 ? 's' : ''}`;\n\n    if (skippedPaths.length) {\n      message += log.chalk.dim(\n        ` | ${skippedPaths.map(path => log.chalk.bold(`/${path}`)).join(', ')} already created`\n      );\n    }\n    if (!results?.didMerge) {\n      message += log.chalk.dim(` | gitignore already synced`);\n    } else if (results.didMerge && results.didClear) {\n      message += log.chalk.dim(` | synced gitignore`);\n    }\n    creatingNativeProjectStep.succeed(message);\n  } catch (e) {\n    log.error(e.message);\n    creatingNativeProjectStep.fail(\n      'Failed to create the native project - see the output above for more information.'\n    );\n    log(\n      chalk.yellow(\n        'You may want to delete the `./ios` and/or `./android` directories before running eject again.'\n      )\n    );\n    throw new SilentError(e);\n  }\n\n  return copiedPaths;\n}\n\n/**\n *\n * @param projectRoot\n * @param tempDir\n *\n * @return `true` if the project is ejecting, and `false` if it's syncing.\n */\nasync function createNativeProjectsFromTemplateAsync({\n  projectRoot,\n  exp,\n  pkg,\n  tempDir,\n  platforms,\n}: {\n  projectRoot: string;\n  exp: ExpoConfig;\n  pkg: PackageJSONConfig;\n  tempDir: string;\n  platforms: PlatformsArray;\n}): Promise<\n  { hasNewProjectFiles: boolean; needsPodInstall: boolean } & DependenciesModificationResults\n> {\n  const copiedPaths = await cloneNativeDirectoriesAsync({\n    projectRoot,\n    tempDir,\n    exp,\n    pkg,\n    platforms,\n  });\n\n  writeMetroConfig({ projectRoot, pkg, tempDir });\n\n  const depsResults = await updatePackageJSONAsync({ projectRoot, tempDir, pkg });\n\n  return {\n    hasNewProjectFiles: !!copiedPaths.length,\n    // If the iOS folder changes or new packages are added, we should rerun pod install.\n    needsPodInstall:\n      copiedPaths.includes('ios') ||\n      depsResults.hasNewDependencies ||\n      depsResults.hasNewDevDependencies,\n    ...depsResults,\n  };\n}\n\n/**\n * Create an object of type DependenciesMap a dependencies object or throw if not valid.\n *\n * @param dependencies - ideally an object of type {[key]: string} - if not then this will error.\n */\nfunction createDependenciesMap(dependencies: any): DependenciesMap {\n  if (typeof dependencies !== 'object') {\n    throw new Error(`Dependency map is invalid, expected object but got ${typeof dependencies}`);\n  }\n\n  const outputMap: DependenciesMap = {};\n  if (!dependencies) return outputMap;\n\n  for (const key of Object.keys(dependencies)) {\n    const value = dependencies[key];\n    if (typeof value === 'string') {\n      outputMap[key] = value;\n    } else {\n      throw new Error(\n        `Dependency for key \\`${key}\\` should be a \\`string\\`, instead got: \\`{ ${key}: ${JSON.stringify(\n          value\n        )} }\\``\n      );\n    }\n  }\n  return outputMap;\n}\n\n/**\n * Some packages are not configured automatically on eject and may require\n * users to add some code, eg: to their AppDelegate.\n */\nasync function warnIfDependenciesRequireAdditionalSetupAsync(\n  pkg: PackageJSONConfig,\n  options?: EjectAsyncOptions\n): Promise<void> {\n  const expoPackagesWithExtraSetup = [\n    'expo-camera',\n    'expo-image-picker',\n    'expo-av',\n    'expo-background-fetch',\n    'expo-barcode-scanner',\n    'expo-brightness',\n    'expo-calendar',\n    'expo-contacts',\n    'expo-file-system',\n    'expo-location',\n    'expo-media-library',\n    'expo-notifications',\n    'expo-screen-orientation',\n    'expo-sensors',\n    'expo-task-manager',\n  ].reduce(\n    (prev, curr) => ({\n      ...prev,\n      [curr]: `https://github.com/expo/expo/tree/master/packages/${curr}`,\n    }),\n    {}\n  );\n  const pkgsWithExtraSetup: Record<string, string> = {\n    ...expoPackagesWithExtraSetup,\n    'lottie-react-native': 'https://github.com/react-native-community/lottie-react-native',\n    'expo-constants': `${chalk.bold(\n      'Constants.manifest'\n    )} is not available in the bare workflow. You should replace it with ${chalk.bold(\n      'Updates.manifest'\n    )}. ${log.chalk.dim(\n      learnMore('https://docs.expo.io/versions/latest/sdk/updates/#updatesmanifest')\n    )}`,\n  };\n  const packagesToWarn: string[] = Object.keys(pkg.dependencies).filter(\n    pkgName => pkgName in pkgsWithExtraSetup\n  );\n\n  if (packagesToWarn.length === 0) {\n    return;\n  }\n\n  log.newLine();\n  const warnAdditionalSetupStep = CreateApp.logNewSection(\n    'Checking if any additional setup steps are required for installed SDK packages.'\n  );\n\n  const plural = packagesToWarn.length > 1;\n\n  warnAdditionalSetupStep.stopAndPersist({\n    symbol: '⚠️ ',\n    text: chalk.red(\n      `Your app includes ${chalk.bold(`${packagesToWarn.length}`)} package${\n        plural ? 's' : ''\n      } that require${plural ? '' : 's'} additional setup in order to run:`\n    ),\n  });\n\n  packagesToWarn.forEach(pkgName => {\n    log.nested(`- ${chalk.bold(pkgName)}: ${pkgsWithExtraSetup[pkgName]}`);\n  });\n}\n\nexport function stripDashes(s: string): string {\n  return s.replace(/\\s|-/g, '');\n}\n\n/**\n * Returns true if the input string matches the default expo main field.\n *\n * - ./node_modules/expo/AppEntry\n * - ./node_modules/expo/AppEntry.js\n * - node_modules/expo/AppEntry.js\n * - expo/AppEntry.js\n * - expo/AppEntry\n *\n * @param input package.json main field\n */\nexport function isPkgMainExpoAppEntry(input?: string): boolean {\n  const main = input || '';\n  if (main.startsWith('./')) {\n    return main.includes('node_modules/expo/AppEntry');\n  }\n  return main.includes('expo/AppEntry');\n}\n"],"file":"Eject.js"}